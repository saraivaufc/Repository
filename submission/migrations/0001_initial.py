# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-16 12:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='description')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('image', models.FileField(upload_to=b'documents/event/images/%Y/%m/%d', verbose_name='Image')),
                ('typology', models.CharField(choices=[('conference', 'Conference'), ('workshop', 'Workshop')], max_length=100, verbose_name='Typology')),
                ('date', models.DateField(verbose_name='Date')),
                ('submission_1_open', models.DateField(verbose_name='Submission 1 Open')),
                ('submission_1_close', models.DateField(verbose_name='Submission 1 Close')),
                ('review_open', models.DateField(verbose_name='Review Open')),
                ('review_close', models.DateField(verbose_name='Review Close')),
                ('submission_2_open', models.DateField(verbose_name='Submission 2 Open')),
                ('submission_2_close', models.DateField(verbose_name='Submission 2 Close')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.Community', verbose_name='Community')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.Publisher', verbose_name='Publisher')),
            ],
            options={
                'ordering': ['-date'],
                'verbose_name': 'Event',
                'verbose_name_plural': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originality', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='Originality')),
                ('originality_observation', models.TextField(blank=True, null=True, verbose_name='Originality observation')),
                ('technical_merit', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='Technical Merit')),
                ('technical_merit_observation', models.TextField(blank=True, null=True, verbose_name='Technical Merit observation')),
                ('clarity', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='Clarity')),
                ('clarity_observation', models.TextField(blank=True, null=True, verbose_name='Clarity observation')),
                ('text_quality', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='Text Quality')),
                ('text_quality_observation', models.TextField(blank=True, null=True, verbose_name='Text Quality Observation')),
                ('relevance', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='Relevance')),
                ('relevance_observation', models.TextField(blank=True, null=True, verbose_name='Relevance Observation')),
                ('knowledge_level_revisor', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='Knowledge Level Revisor')),
                ('knowledge_level_revisor_observation', models.TextField(blank=True, null=True, verbose_name='Knowledge Level Revisor Observation')),
                ('general', models.CharField(choices=[(b'Bad', 'Bad'), (b'Fragile', 'Fragile'), (b'Average', 'Average'), (b'Good', 'Good'), (b'Fantastic', 'Fantastic')], max_length=100, verbose_name='General')),
                ('general_observation', models.TextField(blank=True, null=True, verbose_name='General Observation')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True, verbose_name='Slug')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submission.Event', verbose_name='Event')),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manager.Publication', verbose_name='Publication')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='submission.Review', verbose_name='Review')),
                ('reviser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Reviser', to=settings.AUTH_USER_MODEL, verbose_name='Reviser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Submission',
                'verbose_name_plural': 'Submission',
                'permissions': (('list_submission_to_review', 'List Submission To  Review'), ('submit_final', 'Submit Final')),
            },
        ),
    ]
